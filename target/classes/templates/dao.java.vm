package ${packageMap.dao};

import ${packageMap.entity}.${fileNameMap.entity};
import org.apache.ibatis.annotations.*;
#if($model.mybatisPlusModel)
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
###else
##import java.util.List;
#end

/**
 * (${table.tableName})表  数据访问层
 * @author ${author}
 * @date  ${date}
 */
@Mapper
#if(${model.mybatisPlusModel})
public interface ${fileNameMap.dao} extends BaseMapper<${fileNameMap.entity}>{

}
#else
public interface ${fileNameMap.dao}{

    /**
     * 通过id查询单条数据
     */
    @Select("SELECT #foreach($column in $table.columnList)`$column.columnName.toUpperCase()`#if($velocityCount != $table.columnList.size()),#end#end FROM `${table.tableName.toUpperCase()}` WHERE `${table.primary.columnName.toUpperCase()}`=#{id}")
    ${fileNameMap.entity} selectById(${table.primary.javaType.getSimpleName()} id);

    /**
     * 新增单条数据
     */
    @Insert("INSERT INTO `${table.tableName.toUpperCase()}` (#foreach($column in $table.columnList)#if($column.columnName != $table.primary.columnName)`$column.columnName.toUpperCase()`#if($velocityCount != ${table.columnList.size()}),#end#end#end) VALUES (#foreach($column in $table.columnList)#if($column.columnName != $table.primary.columnName)#{${column.fieldName}}#if($velocityCount != $table.columnList.size()),#end#end#end)")
    @Options(useGeneratedKeys = true, keyProperty = "$table.primary.fieldName", keyColumn = "$table.primary.columnName")
    int insertOne(${fileNameMap.entity} ${NameUtils.initialLowercase(${fileNameMap.entity})});

    /**
     * 通过id修改单条数据
     */
    @Update("UPDATE `$table.tableName.toUpperCase()` SET #foreach($column in $table.columnList)#if($column.columnName != $table.primary.columnName)`$column.columnName.toUpperCase()`=#{$column.fieldName}#if($velocityCount != $table.columnList.size()),#end#end#end WHERE `$table.primary.columnName.toUpperCase()`=#{$table.primary.fieldName}")
    int updateById(${fileNameMap.entity} ${NameUtils.initialLowercase(${fileNameMap.entity})});

    /**
     * 通过id删除单条数据
     */
    @Delete("DELETE FROM `${table.tableName.toUpperCase()}` WHERE `${table.primary.columnName.toUpperCase()}`=#{id}")
    int deleteById(${table.primary.javaType.getSimpleName()} id);

}
#end